/*
  A Belote game

  Copyright (C) 2012 Clément GERARDIN.

  This file is part of Belote.

  Gforth is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 3
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
*/

package graphisme;

import audio.JOrbisPlayer;
import belote.joueur.IJoueurBelote;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
/* Pour les sons Wav
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.UnsupportedAudioFileException;
 */
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Clément
 */
public class FenetreDeJeuDeBelote extends javax.swing.JFrame {

    TapisDeBelote tapis;
    FenetreScores fenScore;
    FenetreValeursCartes fenValCartes;
    FenetreDeChat fenetreDeChat;
    FenetrePartieReseau reseau;

    /** Creates new form FenetreDeJeuDeBelote */
    public FenetreDeJeuDeBelote() {
        tapis = new TapisDeBelote();
        fenScore = null;
        fenetreDeChat = new FenetreDeChat();
        fenetreDeChat.addWindowListener( new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                jCheckBoxMenuItemChat.setSelected(false);
            }
            
        });
        initComponents();
        tapis.setLabelEtat( jLabelEtat);
        tapis.setLabelDistribution(jLabel1);
        tapis.setJMenuItemStart(jMenuItemNouveau);
        jCheckBoxMenuItemConfirmBeloteActionPerformed(null);
        jCheckBoxMenuItemConfirmPlisActionPerformed(null);
        jCheckBoxMenuItemConfirmJeuActionPerformed(null);
        jCheckBoxMenuItemViewCardsActionPerformed(null);
        jCheckBoxMenuItemShowWinnerActionPerformed(null);
        jCheckBoxMenuItemWithMouseActionPerformed(null);
        jCheckBoxMenuItemWithAnnoncesActionPerformed(null);
        jCheckBoxMenuItemConfirmJeuActionPerformed(null);
    }

    @Override
    public void dispose() {
        if ( reseau != null) reseau.dispose();
        super.dispose();
        System.exit(0);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTapis = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelEtat = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemNouveau = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemNetworkGame = new javax.swing.JMenuItem();
        jCheckBoxMenuItemChat = new javax.swing.JCheckBoxMenuItem();
        jMenuItemQuitter = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItemConfirmBelote = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemWithAnnonces = new javax.swing.JCheckBoxMenuItem();
        jMenuItemGameSpeed = new javax.swing.JMenuItem();
        jCheckBoxMenuItemWithMouse = new javax.swing.JCheckBoxMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItemShowTaken = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItemValCartes = new javax.swing.JMenuItem();
        jMenuItemAffiche = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenu5 = new javax.swing.JMenu();
        jMenuItemCSmall = new javax.swing.JMenuItem();
        jMenuItemCNormal = new javax.swing.JMenuItem();
        jMenuItemCBig1 = new javax.swing.JMenuItem();
        jMenuItemCBig2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItemConfirmRebelote = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemConfirmPlis = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemConfirmJeu = new javax.swing.JCheckBoxMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jCheckBoxMenuItemShowWinner = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemViewCards = new javax.swing.JCheckBoxMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Belote en réseau");

        jPanelTapis.setLayout(new java.awt.BorderLayout());

        jPanelTapis.add( tapis, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelTapis, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabelEtat.setText("Version 1.02");
        jPanel2.add(jLabelEtat, java.awt.BorderLayout.EAST);

        jLabel1.setText("Par Clément GERARDIN");
        jPanel2.add(jLabel1, java.awt.BorderLayout.WEST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jMenu1.setText("Jeu");

        jMenuItemNouveau.setText("Nouvelle partie");
        jMenuItemNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNouveauActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNouveau);
        jMenu1.add(jSeparator2);

        jMenuItemNetworkGame.setText("Partie en réseau");
        jMenuItemNetworkGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNetworkGameActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNetworkGame);

        jCheckBoxMenuItemChat.setText("Fenetre de discussions");
        jCheckBoxMenuItemChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemChatActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItemChat);

        jMenuItemQuitter.setText("Quitter");
        jMenuItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitterActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemQuitter);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Mode");

        jCheckBoxMenuItemConfirmBelote.setSelected(true);
        jCheckBoxMenuItemConfirmBelote.setText("Compter la belote");
        jCheckBoxMenuItemConfirmBelote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemConfirmBeloteActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemConfirmBelote);

        jCheckBoxMenuItemWithAnnonces.setText("Jouer avec les annonces");
        jCheckBoxMenuItemWithAnnonces.setEnabled(false);
        jCheckBoxMenuItemWithAnnonces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemWithAnnoncesActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemWithAnnonces);

        jMenuItemGameSpeed.setText("Vitesse du jeu");
        jMenuItemGameSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGameSpeedActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemGameSpeed);

        jCheckBoxMenuItemWithMouse.setSelected(true);
        jCheckBoxMenuItemWithMouse.setText("Jouez avec la souris");
        jCheckBoxMenuItemWithMouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemWithMouseActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemWithMouse);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Affichage");

        jMenuItemShowTaken.setText("Carte prise au début");
        jMenuItemShowTaken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemShowTakenActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemShowTaken);

        jMenuItem1.setText("Dernier pli");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);
        jMenu4.add(jSeparator3);

        jMenuItemValCartes.setText("Valeur des cartes");
        jMenuItemValCartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemValCartesActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemValCartes);

        jMenuItemAffiche.setText("Scores");
        jMenuItemAffiche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAfficheActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemAffiche);

        jMenuItem3.setText("Statistiques");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);
        jMenu4.add(jSeparator4);

        jMenu5.setText("Taille des cartes");

        jMenuItemCSmall.setText("Petites");
        jMenuItemCSmall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCSmallActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItemCSmall);

        jMenuItemCNormal.setText("Normales");
        jMenuItemCNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCNormalActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItemCNormal);

        jMenuItemCBig1.setText("Grandes");
        jMenuItemCBig1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCBig1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItemCBig1);

        jMenuItemCBig2.setText("Plus Grandes");
        jMenuItemCBig2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCBig2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItemCBig2);

        jMenu4.add(jMenu5);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Apprentissage");

        jCheckBoxMenuItemConfirmRebelote.setText("Annoncer la rebelote");
        jCheckBoxMenuItemConfirmRebelote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemConfirmRebeloteActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItemConfirmRebelote);

        jCheckBoxMenuItemConfirmPlis.setText("Confirmer le gagnant");
        jCheckBoxMenuItemConfirmPlis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemConfirmPlisActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItemConfirmPlis);

        jCheckBoxMenuItemConfirmJeu.setSelected(true);
        jCheckBoxMenuItemConfirmJeu.setText("Confirmer le gagnant de la partie");
        jCheckBoxMenuItemConfirmJeu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemConfirmJeuActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItemConfirmJeu);
        jMenu3.add(jSeparator1);

        jCheckBoxMenuItemShowWinner.setText("Toujours afficher la carte gagnante");
        jCheckBoxMenuItemShowWinner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemShowWinnerActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItemShowWinner);

        jCheckBoxMenuItemViewCards.setText("Montrer toutes les cartes");
        jCheckBoxMenuItemViewCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemViewCardsActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItemViewCards);

        jMenuBar1.add(jMenu3);

        jMenu6.setText("Ambiance sonore");

        jMenuItem2.setText("Un peu de Pagnol ?");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem2);

        jMenuBar1.add(jMenu6);

        jMenu7.setText("Aide");

        jMenuItem4.setText("A propos");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem4);

        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNouveauActionPerformed
        if ( jMenuItemNouveau.getText().startsWith("N"))
            tapis.nouvellePartie(null);
        else
            tapis.analyseur.demandeLaFinDeLaPartie(true);
    }//GEN-LAST:event_jMenuItemNouveauActionPerformed

    private void jMenuItemAfficheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAfficheActionPerformed
        if ( fenScore == null) {
            fenScore = new FenetreScores( tapis.analyseur.statistique);
        }
        
        fenScore.setVisible(false);
        fenScore.setVisible(true);

    }//GEN-LAST:event_jMenuItemAfficheActionPerformed

    private void jMenuItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitterActionPerformed
        if ( fenScore != null ) fenScore.dispose();
        System.exit(0);
    }//GEN-LAST:event_jMenuItemQuitterActionPerformed

    private void jCheckBoxMenuItemConfirmPlisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemConfirmPlisActionPerformed
        tapis.analyseur.setConfirmMode( jCheckBoxMenuItemConfirmPlis.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemConfirmPlisActionPerformed

    private void jCheckBoxMenuItemConfirmBeloteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemConfirmBeloteActionPerformed
        tapis.analyseur.setConfirmBelote( jCheckBoxMenuItemConfirmBelote.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemConfirmBeloteActionPerformed

    private void jCheckBoxMenuItemViewCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemViewCardsActionPerformed
        tapis.setCartesTournees( ! jCheckBoxMenuItemViewCards.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemViewCardsActionPerformed

    private void jCheckBoxMenuItemShowWinnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemShowWinnerActionPerformed
        tapis.setAfficheCarteGagnante( jCheckBoxMenuItemShowWinner.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemShowWinnerActionPerformed

    private void jCheckBoxMenuItemWithMouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemWithMouseActionPerformed
        tapis.setPlayWithMouse( jCheckBoxMenuItemWithMouse.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemWithMouseActionPerformed

    private void jMenuItemCSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCSmallActionPerformed
        tapis.setTailleCartes(1);
    }//GEN-LAST:event_jMenuItemCSmallActionPerformed

    private void jMenuItemCNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCNormalActionPerformed
        tapis.setTailleCartes(2);
    }//GEN-LAST:event_jMenuItemCNormalActionPerformed

    private void jMenuItemCBig2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCBig2ActionPerformed
        tapis.setTailleCartes(4);
    }//GEN-LAST:event_jMenuItemCBig2ActionPerformed

    private void jMenuItemShowTakenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemShowTakenActionPerformed
        if ( tapis.analyseur.cartePrise != null)
            JOptionPane.showMessageDialog(this, "La carte prise était : " + tapis.analyseur.cartePrise.toLongString() +
                                                "\n\nL'atout est : " + tapis.analyseur.getCouleurAtout() + "\n");
    }//GEN-LAST:event_jMenuItemShowTakenActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if ( tapis.analyseur.dernierPli != null) {
            String s = "";
            for ( cartes.Carte c : tapis.analyseur.dernierPli)
                s += c.toString() + "\n";

            JOptionPane.showMessageDialog(this, "Le dernier pli était : \n\n" + s + "\n");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jCheckBoxMenuItemWithAnnoncesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemWithAnnoncesActionPerformed
        tapis.analyseur.setAvecAnnonces( jCheckBoxMenuItemWithAnnonces.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemWithAnnoncesActionPerformed

    boolean audioFini = true;
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if ( audioFini) {

            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new Thread( new Runnable() {
                        @Override
                        public void run(){
                            jMenuItem2.setEnabled(false);

                            /* Version WAV
                            try {
                                SourceDataLine line;
                                AudioInputStream audioInputStream;
                                audioFini = false;
                                java.net.URL fichier = FenetreDeJeuDeBelote.class.getResource("/audio/partie_de_cartes.wav");
                                AudioFileFormat format = AudioSystem.getAudioFileFormat(fichier);
                                audioInputStream = AudioSystem.getAudioInputStream(fichier);
                                AudioFormat audioFormat = audioInputStream.getFormat();
                                DataLine.Info info = new DataLine.Info(SourceDataLine.class, audioFormat);
                                line = (SourceDataLine) AudioSystem.getLine(info);
                                line.open(audioFormat);
                                line.start();
                                byte[] bytes = new byte[1024];
                                int bytesRead = 0;
                                while ((bytesRead = audioInputStream.read(bytes, 0, bytes.length)) != -1) {
                                    line.write(bytes, 0, bytesRead);
                                }
                            } catch (LineUnavailableException ex) {
                                Logger.getLogger(FenetreDeJeuDeBelote.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (UnsupportedAudioFileException ex) {
                                Logger.getLogger(FenetreDeJeuDeBelote.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IOException ex) {
                                Logger.getLogger(FenetreDeJeuDeBelote.class.getName()).log(Level.SEVERE, null, ex);
                            } */

                             JOrbisPlayer player=new JOrbisPlayer();
                             player.running_as_applet=false;
                             player.bitStream = JOrbisPlayer.class.getResourceAsStream("/audio/partie_de_cartes.ogg");
                             player.play_stream(null);
                             jMenuItem2.setEnabled(true);
                             audioFini = true;
                    }}).start();
                }});
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItemValCartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemValCartesActionPerformed
        if ( fenValCartes == null)
            fenValCartes = new FenetreValeursCartes();

        fenValCartes.setVisible(false);
        fenValCartes.setVisible(true);
    }//GEN-LAST:event_jMenuItemValCartesActionPerformed

    String prct( int b, int a) {
        if ( b == 0 ) return "--";
        else return "" + (int)((((double)a)*100)/(double)b) + "%";
    }

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if ( tapis.analyseur.nbManches == 0) {
            JOptionPane.showMessageDialog(this, "Les statistiques sont disponibles à l'issue d'au moins une manche complète.", "Statistiques",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        String s = "Nombre de Manches : " + tapis.analyseur.nbManches +
                   "\nNombre de parties : " + tapis.analyseur.nbParties +
                   " (" + (tapis.analyseur.nbParties-tapis.analyseur.nbRefus) / tapis.analyseur.nbManches + " par manches" +
                   ")\nNombre de parties non jouées : " + tapis.analyseur.nbRefus +
                   " (" + prct(tapis.analyseur.nbParties, tapis.analyseur.nbRefus) + ")\n\n";
        for ( int i = 0; i < 4; i++) {
            IJoueurBelote j = tapis.analyseur.getJoueur(i);
            String nom = j.getNom();
            s += nom + ((nom.length()==3)?"    ":"") + " Total " + j.getPointsTotaux2() +
                        " Prise " + j.getNbPrises() + " (" +
                            prct(tapis.analyseur.nbParties, j.getNbPrises()) +
                         ") Perdues " + j.getNbPerdues() + "(" + prct(j.getNbPrises(), j.getNbPerdues()) +
                         ") Capots " + j.getNbCapot() + " (" + prct(j.getNbPrises(), j.getNbCapot()) + ")\n";
        }
        JOptionPane.showMessageDialog(this, s, "Statistiques des parties", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jCheckBoxMenuItemConfirmJeuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemConfirmJeuActionPerformed
        tapis.analyseur.setConfirmModeJeu( jCheckBoxMenuItemConfirmJeu.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemConfirmJeuActionPerformed

    private void jMenuItemNetworkGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNetworkGameActionPerformed
        if ( reseau == null) {
            reseau = new FenetrePartieReseau(tapis, fenetreDeChat);
        }
        jCheckBoxMenuItemViewCards.setEnabled(false);
        jCheckBoxMenuItemConfirmBelote.setEnabled(false);
        reseau.setVisible(false);
        reseau.setVisible(true);
    }//GEN-LAST:event_jMenuItemNetworkGameActionPerformed

    private void jMenuItemCBig1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCBig1ActionPerformed
        tapis.setTailleCartes(3);
    }//GEN-LAST:event_jMenuItemCBig1ActionPerformed

    private void jMenuItemGameSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGameSpeedActionPerformed
        String r = JOptionPane.showInputDialog(this, "Vitesse du jeu : ( 0=lent, 20=vitesse MAX )", "10");
        tapis.analyseur.setGameSpeed(Integer.valueOf(r));
    }//GEN-LAST:event_jMenuItemGameSpeedActionPerformed

    private void jCheckBoxMenuItemChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemChatActionPerformed
        fenetreDeChat.setVisible( jCheckBoxMenuItemChat.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemChatActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        new FenetreApropos().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jCheckBoxMenuItemConfirmRebeloteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemConfirmRebeloteActionPerformed
        tapis.analyseur.setConfirmRebelote( jCheckBoxMenuItemConfirmRebelote.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemConfirmRebeloteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemChat;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemConfirmBelote;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemConfirmJeu;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemConfirmPlis;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemConfirmRebelote;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemShowWinner;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemViewCards;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemWithAnnonces;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemWithMouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEtat;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItemAffiche;
    private javax.swing.JMenuItem jMenuItemCBig1;
    private javax.swing.JMenuItem jMenuItemCBig2;
    private javax.swing.JMenuItem jMenuItemCNormal;
    private javax.swing.JMenuItem jMenuItemCSmall;
    private javax.swing.JMenuItem jMenuItemGameSpeed;
    private javax.swing.JMenuItem jMenuItemNetworkGame;
    private javax.swing.JMenuItem jMenuItemNouveau;
    private javax.swing.JMenuItem jMenuItemQuitter;
    private javax.swing.JMenuItem jMenuItemShowTaken;
    private javax.swing.JMenuItem jMenuItemValCartes;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelTapis;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    // End of variables declaration//GEN-END:variables

}
