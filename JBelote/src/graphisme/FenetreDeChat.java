/*
  A Belote game

  Copyright (C) 2012 Clément GERARDIN.

  This file is part of Belote.

  Gforth is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 3
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
*/

package graphisme;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

/**
 * Fenêtre qui affiche des messages dans un tableau et qui permet d'en saisir.
 * @author Clément
 */
public class FenetreDeChat extends javax.swing.JFrame {

    ArrayList<String> lignes;
    boolean canSend;
    private TableModelListener listener;
    TableModel model;

    /** Classe interne qui gère le contenu de la table des messages  de cette fenêtre */
    class TableModelChat extends JTextArea implements TableModel, TableCellRenderer {
        public TableModelChat() { setEditable(true); setLineWrap(true); setWrapStyleWord(true); }    
        @Override
        public int getRowCount() { return lignes.size(); }
        @Override
        public int getColumnCount() { return 1; }
        @Override
        public String getColumnName(int columnIndex) { return "Messages"; }
        @Override
        public Class<?> getColumnClass(int columnIndex) { return String.class; }
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) { return false; }
        @Override
        public Object getValueAt(int rowIndex, int columnIndex) { return lignes.get( rowIndex); }
        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) { }
        @Override
        public void addTableModelListener(TableModelListener l) { listener = l; }
        @Override
        public void removeTableModelListener(TableModelListener l) { listener = null; }
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText( (String)value);
            return this;
        }
    }

    /** Creates new form FenetreDeChat */
    public FenetreDeChat() {

        model = new TableModelChat();
        lignes = new ArrayList<String>(100);
        initComponents();
        jTable1.setDefaultRenderer(String.class, (TableCellRenderer)model);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
    }

    /** Ajout d'un message à afficher dans la fenêtre */
    public void addChat(String it) {
        lignes.add( it);
        if ( listener != null) listener.tableChanged(null);
    }

    /** Donne le message saisi par l'utilisateur */
    public String getChat() {
        if ( canSend) {
            SwingUtilities.invokeLater(new Runnable() {

                @Override
                public void run() {
                    jButtonSendChat.setEnabled(true);
                    jTextAreaChat.setEnabled(true);
                    jTextAreaChat.setText("");
                }
            });

            String r = jTextAreaChat.getText();
            canSend = false;
            return r;
        } else
            return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaChat = new javax.swing.JTextArea();
        jButtonSendChat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setTitle("Discussions autour de la table réseau");

        jTextAreaChat.setColumns(20);
        jTextAreaChat.setLineWrap(true);
        jTextAreaChat.setRows(4);
        jScrollPane2.setViewportView(jTextAreaChat);

        jButtonSendChat.setText("Envoyer");
        jButtonSendChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendChatActionPerformed(evt);
            }
        });

        jTable1.setModel( model
        );
        jTable1.setRowHeight(60);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addComponent(jButtonSendChat, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSendChat)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSendChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendChatActionPerformed
        canSend = true;
        jButtonSendChat.setEnabled(false);
        jTextAreaChat.setEnabled(false);
    }//GEN-LAST:event_jButtonSendChatActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSendChat;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextAreaChat;
    // End of variables declaration//GEN-END:variables

}
